//@version=5
strategy("TSLA Daily Return Mean Reversion", shorttitle="TSLA Mean Rev", overlay=true, 
         default_qty_type=strategy.percent_of_equity, default_qty_value=10, 
         pyramiding=0, calc_on_every_tick=false, process_orders_on_close=true)

// Strategy Settings
lookback_period = input.int(20, title="Lookback Period for Ranking", minval=5, maxval=50, group="Strategy Settings")
percentile_threshold = input.float(10.0, title="Percentile Threshold (%)", minval=1.0, maxval=25.0, group="Strategy Settings")
hold_days = input.int(1, title="Hold Period (Days)", minval=1, maxval=10, group="Strategy Settings")

// Risk Management
position_size_pct = input.float(10.0, title="Position Size (%)", minval=1.0, maxval=50.0, group="Risk Management")
stop_loss_pct = input.float(5.0, title="Stop Loss (%)", minval=1.0, maxval=20.0, group="Risk Management")

// Calculate Daily Returns
daily_return = (close - close[1]) / close[1] * 100

// Calculate percentiles over lookback period
worst_returns = array.new<float>()
for i = 0 to lookback_period - 1
    array.push(worst_returns, daily_return[i])

array.sort(worst_returns, order.ascending)

// Get percentile thresholds
worst_threshold = array.get(worst_returns, math.floor(array.size(worst_returns) * percentile_threshold / 100))
best_threshold = array.get(worst_returns, math.floor(array.size(worst_returns) * (100 - percentile_threshold) / 100))

// Entry Conditions
// Buy when today's return is in worst percentile (oversold)
long_condition = daily_return <= worst_threshold and strategy.position_size == 0

// Short when today's return is in best percentile (overbought)  
short_condition = daily_return >= best_threshold and strategy.position_size == 0

// Position tracking
var int entry_bar = na
var float entry_price = na
var string position_type = na

// Calculate position size
shares_to_trade = math.floor((strategy.equity * position_size_pct / 100) / close)

// Entry Logic
if long_condition
    strategy.entry("Long", strategy.long, qty=shares_to_trade, comment="Buy Worst Return")
    entry_bar := bar_index
    entry_price := close
    position_type := "long"

if short_condition
    strategy.entry("Short", strategy.short, qty=shares_to_trade, comment="Short Best Return")
    entry_bar := bar_index
    entry_price := close
    position_type := "short"

// Exit Logic - Time-based exit after hold period
bars_in_trade = bar_index - entry_bar

if strategy.position_size > 0 and bars_in_trade >= hold_days
    strategy.close("Long", comment="Time Exit")
    entry_bar := na
    entry_price := na
    position_type := na

if strategy.position_size < 0 and bars_in_trade >= hold_days
    strategy.close("Short", comment="Time Exit")
    entry_bar := na
    entry_price := na
    position_type := na

// Stop Loss Logic
if strategy.position_size > 0 and close <= entry_price * (1 - stop_loss_pct / 100)
    strategy.close("Long", comment="Stop Loss")
    entry_bar := na
    entry_price := na
    position_type := na

if strategy.position_size < 0 and close >= entry_price * (1 + stop_loss_pct / 100)
    strategy.close("Short", comment="Stop Loss")
    entry_bar := na
    entry_price := na
    position_type := na

// Visual Signals
plotshape(long_condition, title="Long Entry", location=location.belowbar, 
          style=shape.triangleup, color=color.green, size=size.normal, text="BUY")
          
plotshape(short_condition, title="Short Entry", location=location.abovebar, 
          style=shape.triangledown, color=color.red, size=size.normal, text="SHORT")

// Plot daily return
hline(0, "Zero Return", color.gray, hline.style_dashed)
plot(daily_return, title="Daily Return %", color=daily_return > 0 ? color.green : color.red, linewidth=2, display=display.data_window)

// Background coloring for extreme returns
bgcolor(daily_return <= worst_threshold ? color.new(color.green, 85) : daily_return >= best_threshold ? color.new(color.red, 85) : na, title="Extreme Return Days")

// Create info table
if barstate.islast
    var table info_table = table.new(position.top_right, 2, 6, bgcolor=color.white, border_width=1)
    table.cell(info_table, 0, 0, "TSLA Mean Reversion", text_color=color.black, text_size=size.normal)
    table.cell(info_table, 1, 0, "", text_color=color.black, text_size=size.normal)
    table.cell(info_table, 0, 1, "Today's Return:", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 1, str.tostring(daily_return, "#.##") + "%", 
               text_color=daily_return > 0 ? color.green : color.red, text_size=size.small)
    table.cell(info_table, 0, 2, "Worst Threshold:", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 2, str.tostring(worst_threshold, "#.##") + "%", text_color=color.green, text_size=size.small)
    table.cell(info_table, 0, 3, "Best Threshold:", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 3, str.tostring(best_threshold, "#.##") + "%", text_color=color.red, text_size=size.small)
    table.cell(info_table, 0, 4, "Position:", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 4, strategy.position_size > 0 ? "LONG" : strategy.position_size < 0 ? "SHORT" : "NONE", 
               text_color=strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : color.gray, text_size=size.small)
    table.cell(info_table, 0, 5, "Days in Trade:", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 5, strategy.position_size != 0 ? str.tostring(bars_in_trade) : "0", text_color=color.blue, text_size=size.small)
